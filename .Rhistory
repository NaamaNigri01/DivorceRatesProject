data <- data %>%
mutate(
estimated_mean_age = (
3 * Age_0_6 + 12 * Age_6_18 + 30 * Age_19_45 +
50 * Age_46_55 + 60 * Age_56_64 + 75 * Age_65_plus
) / Total,
gender_ratio = Men / Woman,
divorces_per_1000 = divorces_sum / Total * 1000,
pct_haredi = votes_haredi / Total * 100,
pct_arab = votes_arab / Total * 100,
pct_other = votes_other / Total * 100
)
desired_order <- c("City_Name", "English name", "divorces_sum", "year", "Total",
"Jews and Others", "Jews", "Others", "Arabs", "Total jobseekers", "Men", "Woman",
"Academic", "Non academic", "Hh", "Unemployed job seekers", "Placement from reference",
"Age_0_6", "Age_6_18", "Age_19_45", "Age_46_55", "Age_56_64", "Age_65_plus",
"votes_haredi", "votes_arab", "votes_other", "estimated_mean_age", "gender_ratio", "divorces_per_1000", "pct_arab", "pct_haredi","pct_other")
data <- data[, desired_order[desired_order %in% names(data)]]
clustering_data <- data %>%
select(estimated_mean_age, Total, Hh, gender_ratio, `Unemployed job seekers`, `Non academic`) %>%
mutate(row_id = row_number()) %>%
drop_na()
clustering_scaled <- scale(select(clustering_data, -row_id))
set.seed(123)
km <- kmeans(clustering_scaled, centers = 3, nstart = 25)
clustering_data$cluster <- km$cluster
data_with_clusters <- data %>%
mutate(row_id = row_number()) %>%
inner_join(select(clustering_data, row_id, cluster), by = "row_id")
summary_table <- data_with_clusters %>%
group_by(cluster) %>%
summarise(
avg_divorces = mean(divorces_per_1000, na.rm = TRUE),
avg_age = mean(estimated_mean_age, na.rm = TRUE),
avg_hh = mean(Hh, na.rm = TRUE),
avg_unemp = mean(`Unemployed job seekers`, na.rm = TRUE),
avg_nonacad = mean(`Non academic`, na.rm = TRUE),
avg_pop = mean(Total, na.rm = TRUE)
)
summary_table
summary_long <- summary_table %>%
pivot_longer(cols = -cluster, names_to = "feature", values_to = "value") %>%
mutate(feature = recode(feature,
avg_divorces = "Divorces per 1000",
avg_age = "Estimated Age",
avg_hh = "Households",
avg_unemp = "Unemployed",
avg_nonacad = "Non-Academic",
avg_pop = "Population"
))
ggplot(summary_long, aes(x = factor(cluster), y = value, fill = factor(cluster))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ feature, scales = "free_y") +
labs(x = "Cluster", y = "Average", title = "Cluster Profiles Across Key Features") +
theme_minimal()
data$high_haredi_vote <- ifelse(data$votes_haredi > 1000, "Yes", "No")
data %>%
filter(!is.na(high_haredi_vote)) %>%
ggplot(aes(x = high_haredi_vote, y = divorces_per_1000, fill = high_haredi_vote)) +
geom_boxplot() +
labs(title = "Divorce Rate by Haredi Voting Volume",
x = "More than 1000 Votes for Haredi Parties?",
y = "Divorces per 1000 Residents") +
theme_minimal()
data$high_arab_vote <- ifelse(data$votes_arab > 1000, "Yes", "No")
data %>%
filter(!is.na(high_arab_vote)) %>%
ggplot(aes(x = high_arab_vote, y = divorces_per_1000, fill = high_arab_vote)) +
geom_boxplot() +
labs(title = "Divorce Rate by Arab Voting Volume",
x = "More than 1000 Votes for Arab Parties?",
y = "Divorces per 1000 Residents") +
theme_minimal()
cor_table <- tibble::tibble(
Group = c("Haredi", "Arab", "Other"),
Correlation = c(
cor(data$divorces_per_1000, data$pct_haredi, use = "complete.obs"),
cor(data$divorces_per_1000, data$pct_arab, use = "complete.obs"),
cor(data$divorces_per_1000, data$pct_other, use = "complete.obs")
)
)
knitr::kable(cor_table, digits = 3, caption = "Correlation between Divorce Rates and Voting Groups")
Divorces <- read_csv("divorces_city.csv", show_col_types = FALSE)
Population_TJBN <- read_csv("Population_TJBN.csv", show_col_types = FALSE)
Population_TJBN
Divorces
Divorces <- read_csv("divorces_city.csv", show_col_types = FALSE)
Population_TJBN <- read_csv("Population_TJBN.csv", show_col_types = FALSE)
Population_TJBN
Divorces
Divorces_data <- Divorces %>%
left_join(Population_TJBN, by = c("locality", "year")) %>%
mutate(divorces_per_1000 = (divorces_sum / population) * 1000)
Divorces <- read_csv("divorces_city.csv", show_col_types = FALSE)
Population_TJBN <- read_csv("Population_TJBN.csv", show_col_types = FALSE)
str(Population_TJBN)
str(Divorces)
Divorces_data <- Divorces %>%
left_join(Population_TJBN, by = c("locality", "year")) %>%
mutate(divorces_per_1000 = (divorces_sum / population) * 1000)
Divorces <- read_csv("divorces_city.csv", show_col_types = FALSE)
Population_TJBN <- read_csv("Population_TJBN.csv", show_col_types = FALSE)
Population_TJBN_long <- Population_TJBN %>%
pivot_longer(cols = -year, names_to = "locality", values_to = "population") %>%
mutate(locality = recode(locality,
"jerusalem" = "ירושלים",
"tel aviv" = "תל אביב יפו",
"bnei brak" = "בני ברק",
"nof hagalil" = "נוף הגליל"))
Divorce_data <- Divorces %>%
filter(locality %in% c("ירושלים", "תל אביב יפו", "בני ברק", "נוף הגליל")) %>%
left_join(Population_TJBN_long, by = c("locality", "year")) %>%
mutate(divorces_per_1000 = (divorces_sum / population) * 1000)
print(Divorce_data)
ggplot(Divorce_data, aes(x = year, y = divorces_per_1000, color = locality)) +
geom_line(size = 1.2) +
geom_point(size = 3) +
labs(
title = "שיעור גירושים ל-1000 תושבים לפי עיר",
x = "שנה",
y = "גירושים ל-1000",
color = "עיר"
) +
theme_minimal(base_family = "Arial")
Divorces <- read_csv("divorces_city.csv", show_col_types = FALSE)
Population_TJBN <- read_csv("Population_TJBN.csv", show_col_types = FALSE)
Population_TJBN_long <- Population_TJBN %>%
pivot_longer(cols = -year, names_to = "locality", values_to = "population") %>%
mutate(locality = recode(locality,
"jerusalem" = "ירושלים",
"tel aviv" = "תל אביב יפו",
"bnei brak" = "בני ברק",
"nof hagalil" = "נוף הגליל"))
Divorce_data <- Divorces %>%
filter(locality %in% c("ירושלים", "תל אביב יפו", "בני ברק", "נוף הגליל")) %>%
mutate(locality = recode(locality,
"ירושלים" = "Jerusalem",
"תל אביב יפו" = "Tel Aviv",
"בני ברק" = "Bnei Brak",
"נוף הגליל" = "Nof HaGalil")) %>%
filter(year <= 2019) %>%
left_join(Population_TJBN_long, by = c("locality", "year")) %>%
mutate(divorces_per_1000 = (divorces_sum / population) * 1000)
# גרף מעוצב
ggplot(Divorce_data, aes(x = year, y = divorces_per_1000, color = locality)) +
geom_line(size = 1.2) +
geom_point(size = 3) +
labs(
title = "Divorce Rate per 1,000 People by City",
x = "Year",
y = "Divorces per 1,000",
color = "City"
) +
theme_minimal(base_family = "Arial")
Divorces <- read_csv("divorces_city.csv", show_col_types = FALSE)
Population_TJBN <- read_csv("Population_TJBN.csv", show_col_types = FALSE)
Population_TJBN_long <- Population_TJBN %>%
pivot_longer(cols = -year, names_to = "locality", values_to = "population") %>%
mutate(locality = recode(locality,
"jerusalem" = "Jerusalem",
"tel aviv" = "Tel Aviv",
"bnei brak" = "Bnei Brak",
"nof hagalil" = "Nof HaGalil"))
Divorce_data <- Divorces %>%
filter(locality %in% c("ירושלים", "תל אביב יפו", "בני ברק", "נוף הגליל")) %>%
mutate(locality = recode(locality,
"ירושלים" = "Jerusalem",
"תל אביב יפו" = "Tel Aviv",
"בני ברק" = "Bnei Brak",
"נוף הגליל" = "Nof HaGalil")) %>%
filter(year <= 2019) %>%
left_join(Population_TJBN_long, by = c("locality", "year")) %>%
mutate(divorces_per_1000 = (divorces_sum / population) * 1000)
# גרף מעוצב
ggplot(Divorce_data, aes(x = year, y = divorces_per_1000, color = locality)) +
geom_line(size = 1.2) +
geom_point(size = 3) +
labs(
title = "Divorce Rate per 1,000 People by City",
x = "Year",
y = "Divorces per 1,000",
color = "City"
) +
theme_minimal(base_family = "Arial")
Divorces <- read_csv("divorces_city.csv", show_col_types = FALSE)
Population_TJBN <- read_csv("Population_TJBN.csv", show_col_types = FALSE)
Population_TJBN_long <- Population_TJBN %>%
pivot_longer(-year, names_to = "locality", values_to = "population") %>%
mutate(
locality = recode(locality,
jerusalem = "Jerusalem",
tel_aviv = "Tel Aviv",
bnei_brak = "Bnei Brak",
nof_hagalil = "Nof HaGalil",
pardes_hanna = "Pardes Hanna-Karkur")
)
# מיזוג, סינון וחישוב שיעור גירושים
Divorce_data <- Divorces %>%
filter(locality %in% c("ירושלים", "תל אביב יפו", "בני ברק", "נוף הגליל", "פרדס חנה-כרכור")) %>%
mutate(locality = recode(locality,
"ירושלים" = "Jerusalem",
"תל אביב יפו" = "Tel Aviv",
"בני ברק" = "Bnei Brak",
"נוף הגליל" = "Nof HaGalil",
"פרדס חנה-כרכור" = "Pardes Hanna-Karkur")) %>%
filter(year <= 2019) %>%
left_join(Population_TJBN_long, by = c("locality", "year")) %>%
mutate(divorces_per_1000 = divorces_sum / population * 1000)
# טבלה לבדיקה
print(Divorce_data)
# ציור גרף
ggplot(Divorce_data, aes(x = year, y = divorces_per_1000, color = locality)) +
geom_line(size = 1.2) +
geom_point(size = 3) +
labs(
title = "Divorce Rate per 1,000 People by City (up to 2019)",
x = "Year",
y = "Divorces per 1,000",
color = "City"
) +
theme_minimal(base_family = "Arial")
Divorces <- read_csv("divorces_city.csv", show_col_types = FALSE)
Population_TJBN <- read_csv("Population_TJBN.csv", show_col_types = FALSE)
Population_TJBN_long <- Population_TJBN %>%
pivot_longer(-year, names_to = "locality", values_to = "population") %>%
mutate(
locality = recode(locality,
"jerusalem" = "Jerusalem",
"tel aviv" = "Tel Aviv",
"bnei brak" = "Bnei Brak",
"nof hagalil" = "Nof HaGalil",
"pardes_hanna" = "Pardes Hanna-Karkur")
)
Divorce_data <- Divorces %>%
filter(locality %in% c("ירושלים", "תל אביב יפו", "בני ברק", "נוף הגליל", "פרדס חנה-כרכור")) %>%
mutate(locality = recode(locality,
"ירושלים" = "Jerusalem",
"תל אביב יפו" = "Tel Aviv",
"בני ברק" = "Bnei Brak",
"נוף הגליל" = "Nof HaGalil",
"פרדס חנה-כרכור" = "Pardes Hanna-Karkur")) %>%
filter(year <= 2019) %>%
left_join(Population_TJBN_long, by = c("locality", "year")) %>%
mutate(divorces_per_1000 = divorces_sum / population * 1000)
# טבלה לבדיקה
print(Divorce_data)
# ציור גרף
ggplot(Divorce_data, aes(x = year, y = divorces_per_1000, color = locality)) +
geom_line(size = 1.2) +
geom_point(size = 3) +
labs(
title = "Divorce Rate per 1,000 People by City (up to 2019)",
x = "Year",
y = "Divorces per 1,000",
color = "City"
) +
theme_minimal(base_family = "Arial")
summary_table <- data_with_clusters %>%
group_by(cluster) %>%
summarise(
n_cities    = n(),                                 # <-- how many rows (=cities)
avg_divorces = mean(divorces_per_1000, na.rm = TRUE),
avg_age      = mean(estimated_mean_age, na.rm = TRUE),
avg_hh       = mean(Hh, na.rm = TRUE),
avg_unemp    = mean(`Unemployed job seekers`, na.rm = TRUE),
avg_nonacad  = mean(`Non academic`, na.rm = TRUE),
avg_pop      = mean(Total, na.rm = TRUE),
.groups = "drop"
)
knitr::kable(summary_table, digits = 2,
caption = "Cluster profile (including number of cities)")
## --- quick textual summary -----------------------------
cat("\nCluster overview:\n")
for(i in 1:nrow(summary_table)) {
row <- summary_table[i,]
cat(
sprintf("• Cluster %d – %d cities | mean divorces/1k = %.2f | mean age = %.1f | mean pop = %.0f\n",
row$cluster, row$n_cities, row$avg_divorces, row$avg_age, row$avg_pop)
)
}
summary_long <- summary_table %>%
pivot_longer(cols = -cluster, names_to = "feature", values_to = "value") %>%
mutate(feature = recode(feature,
avg_divorces = "Divorces per 1000",
avg_age = "Estimated Age",
avg_hh = "Households",
avg_unemp = "Unemployed",
avg_nonacad = "Non-Academic",
avg_pop = "Population"
))
ggplot(summary_long, aes(x = factor(cluster), y = value, fill = factor(cluster))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ feature, scales = "free_y") +
labs(x = "Cluster", y = "Average", title = "Cluster Profiles Across Key Features") +
theme_minimal()
table <- data_with_clusters %>%
group_by(cluster) %>%
summarise(
n_cities    = n(),                                 # <-- how many rows (=cities)
avg_divorces = mean(divorces_per_1000, na.rm = TRUE),
avg_age      = mean(estimated_mean_age, na.rm = TRUE),
avg_hh       = mean(Hh, na.rm = TRUE),
avg_unemp    = mean(`Unemployed job seekers`, na.rm = TRUE),
avg_nonacad  = mean(`Non academic`, na.rm = TRUE),
avg_pop      = mean(Total, na.rm = TRUE),
.groups = "drop"
)
cat("\nCluster overview:\n")
for(i in 1:nrow(summary_table)) {
row <- summary_table[i,]
cat(
sprintf("• Cluster %d – %d cities | mean divorces/1k = %.2f | mean age = %.1f | mean pop = %.0f\n",
row$cluster, row$n_cities, row$avg_divorces, row$avg_age, row$avg_pop)
)
}
library(tidyverse)
library(ggplot2)
Demographic <- read_xlsx("Demographic_info.xlsx")
Population <- read_xlsx("population_2019.xlsx")
Divorces <- read_csv("divorces_city.csv", show_col_types = FALSE)
Election <- read.csv("Election_2019.csv", fileEncoding = "Windows-1255", quote = "")
Age <- read.csv("Age_city.csv", fileEncoding = "Windows-1255", quote = "")
age_data_clean <- Age %>% select(`שם_ישוב`, `גיל_0_6`, `גיל_6_18`, `גיל_19_45`, `גיל_46_55`, `גיל_56_64`, `גיל_65_פלוס`)
age_data_clean <- age_data_clean %>%
rename(
City_Name = `שם_ישוב`,
Age_0_6 = `גיל_0_6`,
Age_6_18 = `גיל_6_18`,
Age_19_45 = `גיל_19_45`,
Age_46_55 = `גיל_46_55`,
Age_56_64 = `גיל_56_64`,
Age_65_plus = `גיל_65_פלוס`
)
Demographic_2019 <- Demographic %>% filter(str_starts(Month, "2019"))
Demographic_2019_avg <- Demographic_2019 %>% group_by(`City symbol`, Name) %>%  summarise(across(where(is.numeric), mean, na.rm = TRUE), .groups = "drop")
Demographic_2019_avg <- Demographic_2019_avg %>%
rename(City_Name = Name)
Population <- Population %>%
rename(City_Name = `Name of Locality`)
Divorces <- Divorces %>%
rename(City_Name = locality)
Election <- Election %>%
rename(City_Name = שם.ישוב)
votes_by_group <- Election %>%
mutate(
votes_total = כשרים,
votes_haredi = rowSums(across(any_of(c("שס", "ג"))), na.rm = TRUE),
votes_arab   = rowSums(across(any_of(c("דעם", "ום", "ן", "נר", "ר"))), na.rm = TRUE),
votes_other  = votes_total - votes_haredi - votes_arab
) %>%
group_by(City_Name) %>%
summarise(across(starts_with("votes"), sum, na.rm = TRUE), .groups = "drop")
Divorces_clean <- Divorces %>% filter(year == 2019)
merged_data <- Demographic_2019_avg %>%
left_join(Population, by = "City_Name") %>%
left_join(Divorces_clean, by = "City_Name") %>%
left_join(votes_by_group, by = "City_Name")
selected_cities <- c("Even Yehuda", "Ofaqim", "Or Yehuda", "Or Aqiva", "Azor", "Elat", "El'ad", "Ari'el", "Be'er Ya'aqov",
"Bet She'an", "Giv'at Ze'ev", "Giv'at Shemu'el", "Gedera", "Gan Yavne", "Ganne Tiqwa", "Dimona",
"Zikhron Ya'aqov", "Harish", "Tiberias", "Tirat Karmel", "Yavne", "Yoqne'am Illit", "Kefar Yona",
"Karmi'el", "Mevasseret Ziyyon", "Migdal HaEmeq", "Mazkeret Batya", "Ma'ale Adummim",
"Ma'alot-Tarshiha", "Nes Ziyyona", "Nesher", "Netivot", "Akko", "Afula", "Arad",
"Pardes Hanna-Karkur", "Zefat", "Qadima- Zoran", "Qiryat Ono", "Qiryat Bialik",
"Qiryat Tiv'on", "Qiryat Yam", "Qiryat Motzkin", "Qiryat Mal'akhi", "Qiryat Shemona",
"Rekhasim", "Ramat HaSharon", "Sederot", "Shoham", "Tel Mond")
data <- merged_data %>%
filter(`English name` %in% selected_cities)
data$City_Name <- str_squish(data$City_Name)
age_data_clean$City_Name <- str_squish(age_data_clean$City_Name)
data <- data %>%
left_join(age_data_clean, by = "City_Name")
data <- data %>%
mutate(
estimated_mean_age = (
3 * Age_0_6 + 12 * Age_6_18 + 30 * Age_19_45 +
50 * Age_46_55 + 60 * Age_56_64 + 75 * Age_65_plus
) / Total,
gender_ratio = Men / Woman,
divorces_per_1000 = divorces_sum / Total * 1000,
pct_haredi = votes_haredi / Total * 100,
pct_arab = votes_arab / Total * 100,
pct_other = votes_other / Total * 100
)
desired_order <- c("City_Name", "English name", "divorces_sum", "year", "Total",
"Jews and Others", "Jews", "Others", "Arabs", "Total jobseekers", "Men", "Woman",
"Academic", "Non academic", "Hh", "Unemployed job seekers", "Placement from reference",
"Age_0_6", "Age_6_18", "Age_19_45", "Age_46_55", "Age_56_64", "Age_65_plus",
"votes_haredi", "votes_arab", "votes_other", "estimated_mean_age", "gender_ratio", "divorces_per_1000", "pct_arab", "pct_haredi","pct_other")
data <- data[, desired_order[desired_order %in% names(data)]]
clustering_data <- data %>%
select(estimated_mean_age, Total, Hh, gender_ratio, `Unemployed job seekers`, `Non academic`) %>%
mutate(row_id = row_number()) %>%
drop_na()
clustering_scaled <- scale(select(clustering_data, -row_id))
set.seed(123)
km <- kmeans(clustering_scaled, centers = 3, nstart = 25)
clustering_data$cluster <- km$cluster
data_with_clusters <- data %>%
mutate(row_id = row_number()) %>%
inner_join(select(clustering_data, row_id, cluster), by = "row_id")
table <- data_with_clusters %>%
group_by(cluster) %>%
summarise(
n_cities    = n(),                                 # <-- how many rows (=cities)
avg_divorces = mean(divorces_per_1000, na.rm = TRUE),
avg_age      = mean(estimated_mean_age, na.rm = TRUE),
avg_hh       = mean(Hh, na.rm = TRUE),
avg_unemp    = mean(`Unemployed job seekers`, na.rm = TRUE),
avg_nonacad  = mean(`Non academic`, na.rm = TRUE),
avg_pop      = mean(Total, na.rm = TRUE),
.groups = "drop"
)
cat("\nCluster overview:\n")
for(i in 1:nrow(summary_table)) {
row <- summary_table[i,]
cat(
sprintf("• Cluster %d – %d cities | mean divorces/1k = %.2f | mean age = %.1f | mean pop = %.0f\n",
row$cluster, row$n_cities, row$avg_divorces, row$avg_age, row$avg_pop)
)
}
summary_table <- data_with_clusters %>%
group_by(cluster) %>%
summarise(
avg_divorces = mean(divorces_per_1000, na.rm = TRUE),
avg_age = mean(estimated_mean_age, na.rm = TRUE),
avg_hh = mean(Hh, na.rm = TRUE),
avg_unemp = mean(`Unemployed job seekers`, na.rm = TRUE),
avg_nonacad = mean(`Non academic`, na.rm = TRUE),
avg_pop = mean(Total, na.rm = TRUE)
)
summary_table
summary_long <- summary_table %>%
pivot_longer(cols = -cluster, names_to = "feature", values_to = "value") %>%
mutate(feature = recode(feature,
avg_divorces = "Divorces per 1000",
avg_age = "Estimated Age",
avg_hh = "Households",
avg_unemp = "Unemployed",
avg_nonacad = "Non-Academic",
avg_pop = "Population"
))
ggplot(summary_long, aes(x = factor(cluster), y = value, fill = factor(cluster))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ feature, scales = "free_y") +
labs(x = "Cluster", y = "Average", title = "Cluster Profiles Across Key Features") +
theme_minimal()
data$high_haredi_vote <- ifelse(data$votes_haredi > 1000, "Yes", "No")
data %>%
filter(!is.na(high_haredi_vote)) %>%
ggplot(aes(x = high_haredi_vote, y = divorces_per_1000, fill = high_haredi_vote)) +
geom_boxplot() +
labs(title = "Divorce Rate by Haredi Voting Volume",
x = "More than 1000 Votes for Haredi Parties?",
y = "Divorces per 1000 Residents") +
theme_minimal()
data$high_arab_vote <- ifelse(data$votes_arab > 1000, "Yes", "No")
data %>%
filter(!is.na(high_arab_vote)) %>%
ggplot(aes(x = high_arab_vote, y = divorces_per_1000, fill = high_arab_vote)) +
geom_boxplot() +
labs(title = "Divorce Rate by Arab Voting Volume",
x = "More than 1000 Votes for Arab Parties?",
y = "Divorces per 1000 Residents") +
theme_minimal()
cor_table <- tibble::tibble(
Group = c("Haredi", "Arab", "Other"),
Correlation = c(
cor(data$divorces_per_1000, data$pct_haredi, use = "complete.obs"),
cor(data$divorces_per_1000, data$pct_arab, use = "complete.obs"),
cor(data$divorces_per_1000, data$pct_other, use = "complete.obs")
)
)
knitr::kable(cor_table, digits = 3, caption = "Correlation between Divorce Rates and Voting Groups")
Divorces <- read_csv("divorces_city.csv", show_col_types = FALSE)
Population_TJBN <- read_csv("Population_TJBN.csv", show_col_types = FALSE)
Population_TJBN_long <- Population_TJBN %>%
pivot_longer(-year, names_to = "locality", values_to = "population") %>%
mutate(
locality = recode(locality,
"jerusalem" = "Jerusalem",
"tel aviv" = "Tel Aviv",
"bnei brak" = "Bnei Brak",
"nof hagalil" = "Nof HaGalil",
"pardes_hanna" = "Pardes Hanna-Karkur")
)
Divorce_data <- Divorces %>%
filter(locality %in% c("ירושלים", "תל אביב יפו", "בני ברק", "נוף הגליל", "פרדס חנה-כרכור")) %>%
mutate(locality = recode(locality,
"ירושלים" = "Jerusalem",
"תל אביב יפו" = "Tel Aviv",
"בני ברק" = "Bnei Brak",
"נוף הגליל" = "Nof HaGalil",
"פרדס חנה-כרכור" = "Pardes Hanna-Karkur")) %>%
filter(year <= 2019) %>%
left_join(Population_TJBN_long, by = c("locality", "year")) %>%
mutate(divorces_per_1000 = divorces_sum / population * 1000)
# טבלה לבדיקה
print(Divorce_data)
# ציור גרף
ggplot(Divorce_data, aes(x = year, y = divorces_per_1000, color = locality)) +
geom_line(size = 1.2) +
geom_point(size = 3) +
labs(
title = "Divorce Rate per 1,000 People by City (up to 2019)",
x = "Year",
y = "Divorces per 1,000",
color = "City"
) +
theme_minimal(base_family = "Arial")
library(tidyverse)
library(ggplot2)
Demographic <- read_xlsx("Demographic_info.xlsx")
